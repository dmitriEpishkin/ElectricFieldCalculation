<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:Nordwest.Wpf.Controls"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Material.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <RotateTransform x:Key="Rotate0" Angle="0" />
    <RotateTransform x:Key="Rotate90" Angle="90" />
    <RotateTransform x:Key="Rotate90Back" Angle="-90" />
    <RotateTransform x:Key="Rotate180" Angle="180" />
    <RotateTransform x:Key="Rotate180Back" Angle="-180" />
    <controls:MultiplyConverter x:Key="MultiplyConverter" />

    <!--<SolidColorBrush x:Key="ButtonBackgroundBrush" Color="{StaticResource ButtonBackgroundColor}" />-->

    <Geometry x:Key="Data">M24.88 12.88l-6.88 6.88-6.88-6.88-2.12 2.12 9 9 9-9z</Geometry>
    <Path x:Key="ExpandArrow" Data="{StaticResource Data}" Fill="Black" />

    <Style TargetType="controls:DirectionalToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:DirectionalToggleButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                                        Storyboard.TargetName="contentPresenter" 
                                                        To="{StaticResource EnabledTextColor}" Duration="0:0:0.2" BeginTime="0:0:0" />
                                        <ColorAnimation Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"
                                                        Storyboard.TargetName="Arrow" 
                                                        To="{StaticResource EnabledIconColor}" Duration="0:0:0.2" BeginTime="0:0:0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                                        Storyboard.TargetName="contentPresenter" 
                                                        To="{StaticResource DisabledTextColor}" Duration="0:0:0.2" BeginTime="0:0:0" />
                                        <ColorAnimation Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"
                                                        Storyboard.TargetName="Arrow" 
                                                        To="{StaticResource DisabledIconColor}" Duration="0:0:0.2" BeginTime="0:0:0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard  >
                                        <DoubleAnimation Storyboard.TargetProperty="(Border.Effect).(DropShadowEffect.BlurRadius)"
                                                         Storyboard.TargetName="Background" 
                                                         To="{StaticResource Shadow1BlurRadius}" Duration="0:0:0.2" BeginTime="0:0:0">
                                            <DoubleAnimation.EasingFunction>
                                                <ExponentialEase EasingMode="EaseInOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetProperty="(Border.Effect).(DropShadowEffect.ShadowDepth)"
                                                         Storyboard.TargetName="Background" 
                                                         To="{StaticResource Shadow1Depth}" Duration="0:0:0.2" BeginTime="0:0:0">
                                            <DoubleAnimation.EasingFunction>
                                                <ExponentialEase EasingMode="EaseInOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <ColorAnimation Storyboard.TargetProperty="(Border.Effect).(DropShadowEffect.Color)"
                                                        Storyboard.TargetName="Background" 
                                                        To="{StaticResource Shadow1Color}" Duration="0:0:0.2" BeginTime="0:0:0" />
                                        <DoubleAnimation Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                                         Storyboard.TargetName="Arrow" 
                                                         To="0" Duration="0:0:0.5" BeginTime="0:0:0">
                                            <DoubleAnimation.EasingFunction>
                                                <ExponentialEase EasingMode="EaseInOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked">
                                    <Storyboard >
                                        <DoubleAnimation Storyboard.TargetProperty="(Border.Effect).(DropShadowEffect.BlurRadius)"
                                                         Storyboard.TargetName="Background" 
                                                         To="{StaticResource Shadow3BlurRadius}" Duration="0:0:0.2" BeginTime="0:0:0">
                                            <DoubleAnimation.EasingFunction>
                                                <ExponentialEase EasingMode="EaseInOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetProperty="(Border.Effect).(DropShadowEffect.ShadowDepth)"
                                                         Storyboard.TargetName="Background" 
                                                         To="{StaticResource Shadow3Depth}" Duration="0:0:0.2" BeginTime="0:0:0">
                                            <DoubleAnimation.EasingFunction>
                                                <ExponentialEase EasingMode="EaseInOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <ColorAnimation Storyboard.TargetProperty="(Border.Effect).(DropShadowEffect.Color)"
                                                        Storyboard.TargetName="Background" 
                                                        To="{StaticResource Shadow3Color}" Duration="0:0:0.2" BeginTime="0:0:0" />
                                        <DoubleAnimation Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                                         Storyboard.TargetName="Arrow" 
                                                         To="180" Duration="0:0:0.5" BeginTime="0:0:0">
                                            <DoubleAnimation.EasingFunction>
                                                <ExponentialEase EasingMode="EaseInOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background" Background="White">
                            <Border.Effect>
                                <DropShadowEffect Direction="{StaticResource ShadowDirection}" Color="{StaticResource Shadow3Color}" BlurRadius="{StaticResource Shadow3BlurRadius}" ShadowDepth="{StaticResource Shadow3Depth}"/>
                            </Border.Effect>

                            <Grid x:Name="ContentGrid">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Path x:Name="Arrow" Data="{StaticResource Data}" 
                                      Fill="{StaticResource EnabledIconBrush}" 
                                      DockPanel.Dock="Left" 
                                      VerticalAlignment="Center" 
                                      HorizontalAlignment="Center" 
                                      Width="36" 
                                      Height="36"
                                      RenderTransformOrigin="0.5,0.5"
                                      LayoutTransform="{StaticResource Rotate180}">
                                    <Path.RenderTransform>
                                        <RotateTransform Angle="0" />
                                    </Path.RenderTransform>
                                </Path>
                                <ContentPresenter
                                    Grid.Column="1" x:Name="contentPresenter"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    Margin="{TemplateBinding Padding}" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Direction" Value="Right">
                            <Setter TargetName="ContentGrid" Property="LayoutTransform" Value="{StaticResource Rotate90}" />
                            <Setter TargetName="Arrow" Property="LayoutTransform" Value="{StaticResource Rotate0}" />
                        </Trigger>
                        <Trigger Property="Direction" Value="Left">
                            <Setter TargetName="ContentGrid" Property="LayoutTransform" Value="{StaticResource Rotate90}" />
                        </Trigger>
                        <Trigger Property="Direction" Value="Up">
                            <Setter TargetName="Arrow" Property="LayoutTransform" Value="{StaticResource Rotate0}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls:MaterialExpander">
        <Setter Property="IsExpanded" Value="False" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:MaterialExpander">
                    <DockPanel>
                        <controls:DirectionalToggleButton x:Name="ExpanderButton" 
                                      DockPanel.Dock="Top"
                                      Panel.ZIndex="1"
                                      IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsExpanded, Mode=TwoWay}"
                                      Content="{TemplateBinding Header}"
                                      Margin="10,0,10,0"
                                      ContentTemplate="{TemplateBinding HeaderTemplate}"
                                      Direction="{TemplateBinding ExpandDirection}"
                                                                      VerticalContentAlignment="Center"
                                                                      HorizontalContentAlignment="Left">
                        </controls:DirectionalToggleButton>
                        <Border x:Name="Border" 
                                Panel.ZIndex="0"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                VerticalAlignment="Stretch">
                            <Border.Tag>
                                <system:Double>0.0</system:Double>
                            </Border.Tag>
                            <Border.Height>
                                <MultiBinding Converter="{StaticResource MultiplyConverter}">
                                    <Binding ElementName="Border" Path="Tag" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ExpandedSize" />
                                </MultiBinding>
                            </Border.Height>
                            <Grid x:Name="MainGrid"
                                  VerticalAlignment="Bottom"
                                  Height="{TemplateBinding ExpandedSize}">
                                <Border Margin="10,0,10,0" Background="White" Effect="{StaticResource Shadow1}"
                                        x:Name="ContentPresenter">
                                    <ContentPresenter Content="{TemplateBinding Content}"
                                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                                      ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Border>
                                <Rectangle x:Name="Resizer"
                                           Height="10"
                                           Margin="0,0,0,-5"
                                           HorizontalAlignment="Stretch"
                                           VerticalAlignment="Bottom"
                                           Cursor="{x:Static Cursors.SizeNS}"
                                           Fill="Transparent" />
                            </Grid>
                        </Border>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <Storyboard TargetProperty="Tag" TargetName="Border">
                                            <DoubleAnimation To="1" Duration="0:0:0.5">
                                                <DoubleAnimation.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseOut" Exponent="3"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <Storyboard TargetProperty="Tag" TargetName="Border">
                                            <DoubleAnimation To="0" Duration="0:0:0.25">
                                                <DoubleAnimation.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseIn" Exponent="3"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Right">
                            <Setter TargetName="Border" Property="LayoutTransform" Value="{StaticResource Rotate90Back}" />
                            <Setter TargetName="ContentPresenter" Property="LayoutTransform" Value="{StaticResource Rotate90}" />
                            <Setter TargetName="ExpanderButton" Property="Margin" Value="0,10,0,10" />
                            <Setter TargetName="ExpanderButton" Property="DockPanel.Dock" Value="Left" />
                            <Setter TargetName="Resizer" Property="Cursor" Value="{x:Static Cursors.SizeWE}" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Up">
                            <Setter TargetName="Border" Property="LayoutTransform" Value="{StaticResource Rotate180}" />
                            <Setter TargetName="ContentPresenter" Property="LayoutTransform" Value="{StaticResource Rotate180Back}" />
                            <Setter TargetName="ExpanderButton" Property="Margin" Value="10,0,10,0" />
                            <Setter TargetName="ExpanderButton" Property="DockPanel.Dock" Value="Bottom" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Left">
                            <Setter TargetName="Border" Property="LayoutTransform" Value="{StaticResource Rotate90}" />
                            <Setter TargetName="ContentPresenter" Property="LayoutTransform" Value="{StaticResource Rotate90Back}" />
                            <Setter TargetName="ExpanderButton" Property="Margin" Value="0,10,0,10" />
                            <Setter TargetName="ExpanderButton" Property="DockPanel.Dock" Value="Right" />
                            <Setter TargetName="Resizer" Property="Cursor" Value="{x:Static Cursors.SizeWE}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>